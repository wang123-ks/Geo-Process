const allParams = {
    "select_cd_data": [
        {
            "briefDescp": "存储类型",
            "dataSourceType": null,
            "dataType": "ENUM",
            "dataTypeExt": "common",
            "defauleValue": "中地云盘,PostgreSQL",
            "descp": "",
            "direction": null,
            "example": null,
            "index": 1,
            "name": "saveType",
            "need": true,
            "xattrs": null,
        },
        {
            "briefDescp": "图层选取",
            "dataSourceType": "PG",
            "dataType": "GEOMETRY",
            "dataTypeExt": "gisData",
            "defauleValue": null,
            "descp": "源图层地址",
            "direction": "IN.URL",
            "example": "pg://mapgis@mapgis/192.168.81.223:5432/postgis/summarymesh_hexgon_96_101_001 或者 hdfs://192.168.96.101:9000/nyc",
            "index": 2,
            "name": "srcUrl",
            "need": true,
            "xattrs": null
        },
    ],
    "copy_cd_data": [
        {
            "briefDescp": "存储类型",
            "dataSourceType": null,
            "dataType": "ENUM",
            "dataTypeExt": "common",
            "defauleValue": "中地云盘,MongoDB",
            "descp": "",
            "direction": null,
            "example": null,
            "index": 1,
            "name": "saveType",
            "need": true,
            "xattrs": null,
        },
        {
            "briefDescp": "保存路径",
            "dataSourceType": "PG",
            "dataType": "GEOMETRY",
            "dataTypeExt": "gisData",
            "defauleValue": null,
            "descp": "结果图层地址",
            "direction": "OUT.URL",
            "example": "pg://mapgis@mapgis/192.168.81.223:5432/postgis/summarymesh_hexgon_96_101_001 或者 hdfs://192.168.96.101:9000/nyc",
            "index": 2,
            "name": "rtnUrl",
            "need": true,
            "xattrs": null
        },
        {
            "briefDescp": "图层名称",
            // "dataSourceType": "PG",
            "dataType": "STRING",
            // "dataTypeExt": "gisData",
            "defauleValue": null,
            "descp": "新图层名称",
            "direction": null,
            "example": null,
            "index": 3,
            "name": "layerName",
            "need": true,
            "xattrs": null
        }
    ],
    "create_tile_index": [
        {
            "briefDescp": "起始层级",
            "dataSourceType": null,
            "dataType": "ENUM",
            "dataTypeExt": "common",
            "defauleValue": "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17",
            // "defauleValue": [5, 6, 7, 8, 12],
            "descp": "需裁剪瓦片的起始层级",
            "direction": null,
            "example": null,
            "index": 1,
            "name": "minLevel",
            "need": true,
            "xattrs": null,
        },
        {
            "briefDescp": "结束层级",
            "dataSourceType": null,
            "dataType": "ENUM",
            "dataTypeExt": "common",
            "defauleValue": "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17",
            // "defauleValue": [5, 6, 7, 8, 12],
            "descp": "需裁剪瓦片的结束层级",
            "direction": null,
            "example": null,
            "index": 2,
            "name": "maxLevel",
            "need": true,
            "xattrs": null,
        },
    ],
    "generate_pbf": [
        // {
        //     "briefDescp": "是否化简",
        //     "dataSourceType": null,
        //     "dataType": "STRING",
        //     "dataTypeExt": "common",
        //     "defauleValue": null,
        //     "descp": "是否化简",
        //     "direction": null,
        //     "example": null,
        //     "index": 3,
        //     "name": "simplifywhether",
        //     "need": true,
        //     "xattrs": null,
        // },
        {
            "briefDescp": "保留拓扑关系",
            "dataSourceType": null,
            "dataType": "ENUM",
            "dataTypeExt": "common",
            "defauleValue": "true,false",
            "descp": "是否保留拓扑关系",
            "direction": null,
            "example": null,
            "index": 1,
            "name": "keepTP",
            "need": true,
            "xattrs": null,
        },
        {
            "briefDescp": "化简方式",
            "dataSourceType": null,
            "dataType": "ENUM",
            "dataTypeExt": "common",
            "defauleValue": "MaxPointInLine,Distance",
            "descp": "支持按距离和比例两种化简方式",
            "direction": null,
            "example": null,
            "index": 2,
            "name": "simplifyMode",
            "need": false,
            "xattrs": null,
        },
        {
            "briefDescp": "比例",
            "dataSourceType": null,
            "dataType": "STRING",
            "dataTypeExt": "common",
            "defauleValue": null,
            "descp": null,
            "direction": null,
            "example": null,
            "index": 3,
            "name": "persents",
            "need": true,
            "xattrs": null,
        },
        {
            "briefDescp": "距离",
            "dataSourceType": null,
            "dataType": "STRING",
            "dataTypeExt": "common",
            "defauleValue": null,
            "descp": null,
            "direction": null,
            "example": null,
            "index": 4,
            "name": "distances",
            "need": true,
            "xattrs": null,
        },
        // {
        //     "briefDescp": "分区数",
        //     "dataSourceType": null,
        //     "dataType": "INT",
        //     "dataTypeExt": "common",
        //     "defauleValue": null,
        //     "descp": null,
        //     "direction": null,
        //     "example": null,
        //     "index": 8,
        //     "name": "partitionNum",
        //     "need": false,
        //     "xattrs": null,
        // },
        {
            "briefDescp": "裁剪模式",
            "dataSourceType": null,
            "dataType": "ENUM",
            "dataTypeExt": "common",
            "defauleValue": "smalldata,bigdata",
            "descp": null,
            "direction": null,
            "example": null,
            "index": 5,
            "name": "model",
            "need": false,
            "xattrs": null,
        },
        
    ],
};

// let random_joke_call_count = 0;

export default {
    'get /dev/getParamsByKey': function (req, res) {
        // const responseObj = random_jokes[random_joke_call_count % random_jokes.length];
        // random_joke_call_count += 1;
        // const responseObj = allParams[req]
        const responseObj = allParams;
        setTimeout(() => {
            // console.warn('在接口内部', req.query);
            // console.warn('在接口内部');
            res.json(responseObj);
        }, 300);
        // res.status(500);
        // res.json({});
    },
};
